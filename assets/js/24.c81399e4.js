(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{403:function(v,a,_){"use strict";_.r(a);var t=_(25),e=Object(t.a)({},(function(){var v=this,a=v.$createElement,_=v._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"其他工具"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他工具"}},[v._v("#")]),v._v(" 其他工具 (Utils)")]),v._v(" "),_("div",{staticClass:"custom-block danger"},[_("p",{staticClass:"custom-block-title"},[v._v("注意")]),v._v(" "),_("p",[v._v("这里是"),_("strong",[v._v("正在施工")]),v._v("的 koishi v2 的文档。要查看 v1 版本的文档，请前往"),_("a",{attrs:{href:"https://koishijs.github.io/v1/",target:"_blank",rel:"noopener noreferrer"}},[_("strong",[v._v("这里")]),_("OutboundLink")],1),v._v("。")])]),v._v(" "),_("p",[v._v("包含了被 Koishi 使用的工具函数，它们由 "),_("code",[v._v("koishi-utils")]),v._v(" 包提供。")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("注意")]),v._v(" "),_("p",[v._v("本页显示的版本号都表示对应的 koishi-utils 版本号（而不是对应的 koishi 版本号）。")])]),v._v(" "),_("h2",{attrs:{id:"noop"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#noop"}},[v._v("#")]),v._v(" noop()")]),v._v(" "),_("p",[v._v("不进行任何操作（no operation）。")]),v._v(" "),_("ul",[_("li",[v._v("返回值: "),_("code",[v._v("void")])])]),v._v(" "),_("h2",{attrs:{id:"sleep"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sleep"}},[v._v("#")]),v._v(" sleep(ms?)")]),v._v(" "),_("p",[v._v("等待一段时间。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("ms:")]),v._v(" "),_("code",[v._v("number")]),v._v(" 要等待的毫秒数")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("Promise<void>")])])]),v._v(" "),_("h2",{attrs:{id:"isinteger"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#isinteger"}},[v._v("#")]),v._v(" isInteger(value)")]),v._v(" "),_("p",[v._v("判断传入的值是否为整数。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("value:")]),v._v(" "),_("code",[v._v("any")]),v._v(" 要判断的值")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("boolean")]),v._v(" 是否为整数")])]),v._v(" "),_("h2",{attrs:{id:"观察者对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#观察者对象"}},[v._v("#")]),v._v(" 观察者对象")]),v._v(" "),_("h3",{attrs:{id:"observe"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#observe"}},[v._v("#")]),v._v(" observe(target, update?, label?)")]),v._v(" "),_("p",[v._v("创建一个观察者对象。目前只支持从普通对象创建（不支持 Array / Set / Map）。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("target:")]),v._v(" "),_("code",[v._v("T extends object")]),v._v(" 要观测的对象")]),v._v(" "),_("li",[_("strong",[v._v("update:")]),v._v(" "),_("code",[v._v("(diff: Partial<T>) => R")]),v._v(" 更新回调函数")]),v._v(" "),_("li",[_("strong",[v._v("label:")]),v._v(" "),_("code",[v._v("string")]),v._v(" 对象的标签，用于标识")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("Observed<T>")])])]),v._v(" "),_("h3",{attrs:{id:"observer-diff"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#observer-diff"}},[v._v("#")]),v._v(" observer._diff")]),v._v(" "),_("p",[v._v("观察者当前的对象变化。")]),v._v(" "),_("h3",{attrs:{id:"observer-merge"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#observer-merge"}},[v._v("#")]),v._v(" observer._merge(source)")]),v._v(" "),_("p",[v._v("将某些属性合并入当前观察者，不会触发 diff 更新。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("source:")]),v._v(" "),_("code",[v._v("object")]),v._v(" 要合并的对象")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("this")])])]),v._v(" "),_("h3",{attrs:{id:"observer-update"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#observer-update"}},[v._v("#")]),v._v(" observer._update()")]),v._v(" "),_("p",[v._v("更新观察者对象，同时清除 diff。")]),v._v(" "),_("ul",[_("li",[v._v("返回值: "),_("code",[v._v("R")])])]),v._v(" "),_("h2",{attrs:{id:"cqcode-操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cqcode-操作"}},[v._v("#")]),v._v(" CQCode 操作")]),v._v(" "),_("p",[v._v("CQCode 结构如下：")]),v._v(" "),_("panel-view",{staticClass:"code",attrs:{title:""}},[_("pre",{staticClass:"shiki",staticStyle:{"background-color":"#272822"}},[_("code",[_("span",{staticStyle:{color:"#66D9EF"}},[v._v("interface")]),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v(" ")]),_("span",{staticStyle:{color:"#A6E22E"}},[v._v("CQCode")]),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v(" {")]),v._v("\n"),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v("  type")]),_("span",{staticStyle:{color:"#F92672"}},[v._v(":")]),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v(" ")]),_("span",{staticStyle:{color:"#66D9EF"}},[v._v("string")]),v._v("\n"),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v("  data")]),_("span",{staticStyle:{color:"#F92672"}},[v._v(":")]),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v(" ")]),_("span",{staticStyle:{color:"#A6E22E"}},[v._v("Record")]),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v("<")]),_("span",{staticStyle:{color:"#66D9EF"}},[v._v("string")]),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v(", ")]),_("span",{staticStyle:{color:"#66D9EF"}},[v._v("string")]),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v(" ")]),_("span",{staticStyle:{color:"#F92672"}},[v._v("|")]),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v(" ")]),_("span",{staticStyle:{color:"#66D9EF"}},[v._v("number")]),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v(">")]),v._v("\n"),_("span",{staticStyle:{color:"#F8F8F2"}},[v._v("}")])])])]),_("h3",{attrs:{id:"cqcode-escape"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cqcode-escape"}},[v._v("#")]),v._v(" CQCode.escape(source, insideCQ?)")]),v._v(" "),_("p",[v._v("转义一段文本到 CQ 码格式。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("source:")]),v._v(" "),_("code",[v._v("string")]),v._v(" 源文本")]),v._v(" "),_("li",[_("strong",[v._v("insideCQ:")]),v._v(" "),_("code",[v._v("boolean")]),v._v(" 在 CQ 码内部转义（会额外处理逗号）")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("string")]),v._v(" 转义过后的文本")])]),v._v(" "),_("h3",{attrs:{id:"cqcode-unescape"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cqcode-unescape"}},[v._v("#")]),v._v(" CQCode.unescape(souce)")]),v._v(" "),_("p",[v._v("取消一段文本的 CQ 码转义。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("source:")]),v._v(" "),_("code",[v._v("string")]),v._v(" 源文本")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("string")]),v._v(" 转义前的文本")])]),v._v(" "),_("h3",{attrs:{id:"cqcode-stringify"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cqcode-stringify"}},[v._v("#")]),v._v(" CQCode.stringify(type, data)")]),v._v(" "),_("p",[v._v("将一个对象转化成 CQ 码文本。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("type:")]),v._v(" "),_("code",[v._v("string")]),v._v(" CQ 码类型")]),v._v(" "),_("li",[_("strong",[v._v("data:")]),v._v(" "),_("code",[v._v("object")]),v._v(" CQ 码参数")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("string")]),v._v(" 生成的 CQ 码")])]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("注意")]),v._v(" "),_("p",[v._v("类型为 text 的 CQ 码将直接被转化为 "),_("code",[v._v("data.text")]),v._v(" 输出。")])]),v._v(" "),_("h3",{attrs:{id:"cqcode-stringifyall"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cqcode-stringifyall"}},[v._v("#")]),v._v(" CQCode.stringifyAll(codes) "),_("Badge",{attrs:{text:"1.0.2+"}})],1),v._v(" "),_("p",[v._v("将多个 CQCode 对象转化成文本并连接。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("codes:")]),v._v(" "),_("code",[v._v("CQCode[]")]),v._v(" CQ 码数组")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("string")]),v._v(" 生成的文本")])]),v._v(" "),_("h3",{attrs:{id:"cqcode-parse"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cqcode-parse"}},[v._v("#")]),v._v(" CQCode.parse(source)")]),v._v(" "),_("p",[v._v("将一个 CQ 码文本解析成对象。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("source:")]),v._v(" "),_("code",[v._v("string")]),v._v(" CQ 码")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("CQCode")]),v._v(" CQ 码的类型和参数")])]),v._v(" "),_("h3",{attrs:{id:"cqcode-parseall"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cqcode-parseall"}},[v._v("#")]),v._v(" CQCode.parseAll(source) "),_("Badge",{attrs:{text:"1.0.2+"}})],1),v._v(" "),_("p",[v._v("解析一段文本内的全部 CQ 码。其中的纯文本将会解析成 text 类型。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("source:")]),v._v(" "),_("code",[v._v("string")]),v._v(" 源文本")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("CQCode[]")]),v._v(" CQ 码数组")])]),v._v(" "),_("h2",{attrs:{id:"字符串操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作"}},[v._v("#")]),v._v(" 字符串操作")]),v._v(" "),_("h3",{attrs:{id:"simplify"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#simplify"}},[v._v("#")]),v._v(" simplify(source)")]),v._v(" "),_("p",[v._v("繁体转简体。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("source:")]),v._v(" "),_("code",[v._v("string")]),v._v(" 源文本")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("string")]),v._v(" 简体文本")])]),v._v(" "),_("h3",{attrs:{id:"traditionalize"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#traditionalize"}},[v._v("#")]),v._v(" traditionalize(source)")]),v._v(" "),_("p",[v._v("简体转繁体。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("source:")]),v._v(" "),_("code",[v._v("string")]),v._v(" 源文本")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("string")]),v._v(" 繁体文本")])]),v._v(" "),_("h3",{attrs:{id:"capitalize"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#capitalize"}},[v._v("#")]),v._v(" capitalize(source)")]),v._v(" "),_("p",[v._v("首字母大写。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("source:")]),v._v(" "),_("code",[v._v("string")]),v._v(" 源文本")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("string")]),v._v(" 首字母大写后的文本")])]),v._v(" "),_("h3",{attrs:{id:"camelcase"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#camelcase"}},[v._v("#")]),v._v(" camelCase(source)")]),v._v(" "),_("p",[v._v("如果输入的是字符串，则将字符串转换成 camelCase；如果是数组或对象，则递归地将对象中的每个（可枚举）的键转换成 camelCase；其他情况不受影响。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("source:")]),v._v(" "),_("code",[v._v("any")]),v._v(" 要转换的内容")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("any")]),v._v(" 转换结果")])]),v._v(" "),_("h3",{attrs:{id:"paramcase"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#paramcase"}},[v._v("#")]),v._v(" paramCase(source)")]),v._v(" "),_("p",[v._v("如果输入的是字符串，则将字符串转换成 param-case；如果是数组或对象，则递归地将对象中的每个（可枚举）的键转换成 param-case；其他情况不受影响。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("source:")]),v._v(" "),_("code",[v._v("any")]),v._v(" 要转换的内容")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("any")]),v._v(" 转换结果")])]),v._v(" "),_("h3",{attrs:{id:"snakecase"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#snakecase"}},[v._v("#")]),v._v(" snakeCase(source)")]),v._v(" "),_("p",[v._v("如果输入的是字符串，则将字符串转换成 snake_case；如果是数组或对象，则递归地将对象中的每个（可枚举）的键转换成 snake_case；其他情况不受影响。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("source:")]),v._v(" "),_("code",[v._v("any")]),v._v(" 要转换的内容")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("any")]),v._v(" 转换结果")])]),v._v(" "),_("h2",{attrs:{id:"日期操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#日期操作"}},[v._v("#")]),v._v(" 日期操作")]),v._v(" "),_("h3",{attrs:{id:"getdatenumber"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#getdatenumber"}},[v._v("#")]),v._v(" getDateNumber(date?)")]),v._v(" "),_("p",[v._v("获取当前日期（从 UNIX 时间开始时计算）。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("date:")]),v._v(" "),_("code",[v._v("Date")]),v._v(" 日期对象，默认为 "),_("code",[v._v("new Date()")])]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("number")]),v._v(" UNIX 时间开始后的天数")])]),v._v(" "),_("h3",{attrs:{id:"fromdatenumber"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#fromdatenumber"}},[v._v("#")]),v._v(" fromDateNumber(value)")]),v._v(" "),_("p",[v._v("从 UNIX 时间开始后的天数计算日期对象。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("value:")]),v._v(" "),_("code",[v._v("number")]),v._v(" UNIX 时间开始后的天数")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("Date")]),v._v(" 日期对象")])]),v._v(" "),_("h2",{attrs:{id:"集合操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#集合操作"}},[v._v("#")]),v._v(" 集合操作")]),v._v(" "),_("h3",{attrs:{id:"contain"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#contain"}},[v._v("#")]),v._v(" contain(array1, array2)")]),v._v(" "),_("p",[v._v("检测集合的包含关系。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("array1:")]),v._v(" "),_("code",[v._v("readonly any[]")]),v._v(" 数组 1")]),v._v(" "),_("li",[_("strong",[v._v("array2:")]),v._v(" "),_("code",[v._v("readonly any[]")]),v._v(" 数组 2")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("boolean")]),v._v(" 数组 1 是否包含数组 2 的全部元素")])]),v._v(" "),_("h3",{attrs:{id:"intersection"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#intersection"}},[v._v("#")]),v._v(" intersection(array1, array2)")]),v._v(" "),_("p",[v._v("求两个集合的交集。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("array1:")]),v._v(" "),_("code",[v._v("readonly any[]")]),v._v(" 数组 1")]),v._v(" "),_("li",[_("strong",[v._v("array2:")]),v._v(" "),_("code",[v._v("readonly any[]")]),v._v(" 数组 2")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("any[]")]),v._v(" 两个数组的交集")])]),v._v(" "),_("h3",{attrs:{id:"difference"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#difference"}},[v._v("#")]),v._v(" difference(array1, array2)")]),v._v(" "),_("p",[v._v("求两个集合的差集。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("array1:")]),v._v(" "),_("code",[v._v("readonly any[]")]),v._v(" 数组 1")]),v._v(" "),_("li",[_("strong",[v._v("array2:")]),v._v(" "),_("code",[v._v("readonly any[]")]),v._v(" 数组 2")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("any[]")]),v._v(" 两个数组的差集")])]),v._v(" "),_("h3",{attrs:{id:"union"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#union"}},[v._v("#")]),v._v(" union(array1, array2)")]),v._v(" "),_("p",[v._v("求两个集合的并集。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("array1:")]),v._v(" "),_("code",[v._v("readonly any[]")]),v._v(" 数组 1")]),v._v(" "),_("li",[_("strong",[v._v("array2:")]),v._v(" "),_("code",[v._v("readonly any[]")]),v._v(" 数组 2")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("any[]")]),v._v(" 两个数组的并集")])]),v._v(" "),_("h2",{attrs:{id:"随机数操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#随机数操作"}},[v._v("#")]),v._v(" 随机数操作")]),v._v(" "),_("h3",{attrs:{id:"randombool"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#randombool"}},[v._v("#")]),v._v(" randomBool(probability)")]),v._v(" "),_("p",[v._v("生成一个随机布尔值，有 probability 的概率为 1。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("probability:")]),v._v(" "),_("code",[v._v("number")]),v._v(" 概率")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("boolean")]),v._v(" 随机布尔值")])]),v._v(" "),_("h3",{attrs:{id:"randomid"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#randomid"}},[v._v("#")]),v._v(" randomId(length?)")]),v._v(" "),_("p",[v._v("生成一个随机 ID，由数字和大小写字母构成，长度为 length。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("length:")]),v._v(" "),_("code",[v._v("number")]),v._v(" ID 长度，默认为 16")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("string")]),v._v(" 生成的 ID")])]),v._v(" "),_("h3",{attrs:{id:"randomreal"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#randomreal"}},[v._v("#")]),v._v(" randomReal(start?, end)")]),v._v(" "),_("p",[v._v("生成一个随机实数。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("start:")]),v._v(" "),_("code",[v._v("number")]),v._v(" 下界，默认为 0")]),v._v(" "),_("li",[_("strong",[v._v("end:")]),v._v(" "),_("code",[v._v("end")]),v._v(" 上界")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("number")]),v._v(" 一个 [start, end) 之间的随机实数")])]),v._v(" "),_("h3",{attrs:{id:"randomint"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#randomint"}},[v._v("#")]),v._v(" randomInt(start?, end)")]),v._v(" "),_("p",[v._v("生成一个随机实数。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("start:")]),v._v(" "),_("code",[v._v("number")]),v._v(" 下界，默认为 0")]),v._v(" "),_("li",[_("strong",[v._v("end:")]),v._v(" "),_("code",[v._v("end")]),v._v(" 上界")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("number")]),v._v(" 一个 [start, end) 之间的随机整数")])]),v._v(" "),_("h3",{attrs:{id:"randompick"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#randompick"}},[v._v("#")]),v._v(" randomPick(array)")]),v._v(" "),_("p",[v._v("从数组中随机挑出一个元素，不改变原数组。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("array:")]),v._v(" "),_("code",[v._v("readonly T[]")]),v._v(" 数组")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("T")]),v._v(" 挑出的元素")])]),v._v(" "),_("h3",{attrs:{id:"randomsplice"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#randomsplice"}},[v._v("#")]),v._v(" randomSplice(array)")]),v._v(" "),_("p",[v._v("从数组中随机删掉一个元素，返回删掉的元素。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("array:")]),v._v(" "),_("code",[v._v("T[]")]),v._v(" 数组")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("T")]),v._v(" 挑出的元素")])]),v._v(" "),_("h3",{attrs:{id:"randommultipick"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#randommultipick"}},[v._v("#")]),v._v(" randomMultiPick(array, count) "),_("Badge",{attrs:{text:"beta",type:"warn"}})],1),v._v(" "),_("p",[v._v("从数组中随机挑出一些元素，不改变原数组。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("array:")]),v._v(" "),_("code",[v._v("readonly T[]")]),v._v(" 数组")]),v._v(" "),_("li",[_("strong",[v._v("count:")]),v._v(" "),_("code",[v._v("number")]),v._v(" 元素个数")]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("T[]")]),v._v(" 挑出的元素列表")])]),v._v(" "),_("h3",{attrs:{id:"randomweightedpick"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#randomweightedpick"}},[v._v("#")]),v._v(" randomWeightedPick(weights, value?) "),_("Badge",{attrs:{text:"beta",type:"warn"}})],1),v._v(" "),_("p",[v._v("按照权重随机挑出一个元素。")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("weights:")]),v._v(" "),_("code",[v._v("Record<T, number>")]),v._v(" 权重表")]),v._v(" "),_("li",[_("strong",[v._v("value:")]),v._v(" "),_("code",[v._v("number")]),v._v(" 一个 0 到 1 之间的随机数，默认为 "),_("code",[v._v("Math.random()")])]),v._v(" "),_("li",[v._v("返回值: "),_("code",[v._v("T")]),v._v(" 挑出的元素")])])],1)}),[],!1,null,null,null);a.default=e.exports}}]);