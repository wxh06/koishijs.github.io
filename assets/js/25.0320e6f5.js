(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{404:function(t,e,r){"use strict";r.r(e);var s=r(25),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),r("div",{staticClass:"custom-block danger"},[r("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),r("p",[t._v("这里是"),r("strong",[t._v("正在施工")]),t._v("的 koishi v2 的文档。要查看 v1 版本的文档，请前往"),r("a",{attrs:{href:"https://koishijs.github.io/v1/",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[t._v("这里")])]),t._v("。")])]),t._v(" "),r("p",[t._v("Koishi 是一个在 Node.js 环境下运行，基于 CoolQ 和 CQHTTP 的 QQ 机器人框架。")]),t._v(" "),r("p",[t._v("它的名字和图标来源于东方 Project 中的角色古明地恋（Komeiji Koishi）。")]),t._v(" "),r("h2",{attrs:{id:"特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),r("h3",{attrs:{id:"开箱即用的-cli"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开箱即用的-cli"}},[t._v("#")]),t._v(" 开箱即用的 CLI")]),t._v(" "),r("p",[t._v("Koishi 高度配置化的 CLI 命令可以让你无需写代码就搭建属于你的机器人。与此同时，CLI 还配备了丰富和人性化的提示，进一步提高调试体验。")]),t._v(" "),r("p",[t._v("参见："),r("RouterLink",{attrs:{to:"/guide/getting-started.html"}},[t._v("快速上手")]),t._v(" / "),r("RouterLink",{attrs:{to:"/guide/config-file.html"}},[t._v("配置文件")])],1),t._v(" "),r("h3",{attrs:{id:"功能强大的-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#功能强大的-api"}},[t._v("#")]),t._v(" 功能强大的 API")]),t._v(" "),r("p",[t._v("Koishi 的 API 包括下面几个部分：")]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/guide/message.html#接收器"}},[t._v("Receiver")]),t._v("：将收到的信息转化为事件进行分发，且同时支持 HTTP 和 WebSocket")],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/guide/message.html#发送器"}},[t._v("Sender")]),t._v("：完美契合 CQHTTP API 的一套异步发送器，同样支持 HTTP 和 WebSocket")],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/guide/message.html#中间件"}},[t._v("Middleware")]),t._v("：支持异步操作的中间件系统，可以让你高效地处理每一条信息")],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/guide/plugin-and-context.html#创建上下文"}},[t._v("Context")]),t._v("：用上下文描述了机器人可能的运行环境，让你得以对不同的群进行不同的处理")],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/guide/plugin-and-context.html#使用插件"}},[t._v("Plugin")]),t._v("：将逻辑以插件的形式封装，可以实现更好的模块化和配置化")],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/guide/command-system.html"}},[t._v("Command")]),t._v("：Koishi 的核心功能之一，使用链式调用轻松创建指令，同时提供了大量的实用特性")],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/guide/using-database.html"}},[t._v("Database")]),t._v("：内置的数据库系统，但并不依赖具体的数据库实现，无论何种数据库都可以在 Koishi 中使用")],1)]),t._v(" "),r("p",[t._v("每一个部分都经过了精心的编写，可以让你轻松实现任何需求。")]),t._v(" "),r("p",[t._v("参见："),r("RouterLink",{attrs:{to:"/api/"}},[t._v("API 文档")])],1),t._v(" "),r("h3",{attrs:{id:"丰富的生态系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#丰富的生态系统"}},[t._v("#")]),t._v(" 丰富的生态系统")]),t._v(" "),r("p",[t._v("Koishi 在编写时，也同样编写了大量的官方插件作为补充。它们有些 Koishi 的基础功能，有些则为 Koishi 的使用提供了许多便利。更重要的是，这数十个插件都可以作为 Koishi 插件开发的极好示范。")]),t._v(" "),r("p",[t._v("参见："),r("RouterLink",{attrs:{to:"/plugins/common.html"}},[t._v("官方插件")])],1),t._v(" "),r("h3",{attrs:{id:"多机器人支持"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#多机器人支持"}},[t._v("#")]),t._v(" 多机器人支持")]),t._v(" "),r("p",[t._v("Koishi 原生地支持了多机器人开发，同时为这些机器人之间互通数据、共用服务器、保证数据安全提供了原生的解决方案，这有助于在保持高性能的同时，将腾讯风控造成的影响降低到最小。")]),t._v(" "),r("p",[t._v("参见："),r("RouterLink",{attrs:{to:"/guide/multiple-bots.html"}},[t._v("多机器人开发")])],1),t._v(" "),r("h3",{attrs:{id:"类型与单元测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#类型与单元测试"}},[t._v("#")]),t._v(" 类型与单元测试")]),t._v(" "),r("p",[t._v("Koishi 在开发时借助了下面的工具：")]),t._v(" "),r("ul",[r("li",[t._v("使用 "),r("a",{attrs:{href:"http://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript")]),t._v(" 编写")]),t._v(" "),r("li",[t._v("使用 "),r("a",{attrs:{href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jest")]),t._v(" 进行单元测试")]),t._v(" "),r("li",[t._v("使用 "),r("a",{attrs:{href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eslint")]),t._v(" 进行代码风格检查")]),t._v(" "),r("li",[t._v("使用 "),r("a",{attrs:{href:"https://github.com/features/actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Actions")]),t._v(" 进行持续集成")])]),t._v(" "),r("p",[t._v("这保证了其代码的正确性和可读性。")])])}),[],!1,null,null,null);e.default=a.exports}}]);